name: Ecosystem CI

on:
  push:
    branches:
      - main
  pull_request: {}
  workflow_dispatch: {}
  schedule:
    - cron: 0 0 * * *

concurrency:
   group: ci-${{ github.head_ref || github.ref }}
   cancel-in-progress: true

env:
  cli: git@github.com:ember-cli/ember-cli.git
  source: git@github.com:emberjs/ember.js.git

jobs:
  build_ember-source:
    runs-on: ubuntu-latest
    name: "Build ember-source"
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: wyvox/action-setup-pnpm@v3
      - name: Build ember-source @ main
        run: pnpm ci:run ./src/ci/build-ember-source.ts  
      - uses: actions/upload-artifact@v4
        with:
          name: ember-source-main-tgz
          path: "*.tgz"
          if-no-files-found: 'error'
          retention-days: 1
          overwrite: true


  preflight: 
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - uses: actions/checkout@v4
      - uses: wyvox/action-setup-pnpm@v3
      - id: set-matrix
        run: |
          matrix_json=$(node --no-warnings --experimental-strip-types ./src/ci/preflight.ts)
          echo "matrix=$matrix_json" >> $GITHUB_OUTPUT




  ##################
  #
  # Tests ember-cli
  #
  # TODO: when anything falis here, auto-open an issue on ember-cli
  new_app:
    needs: [preflight] # not explicitly required, but if this fails, I don't want any of CI running
    name: 'üì¶ App'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        args: 
          - '' 
          - '--pnpm' 
          - '--typescript' 
          - '--embroider' 
          - '--embroider --typescript' 
          - '--embroider --typescript --pnpm' 
          - '--blueprint @embroider/app-blueprint --pnpm' 
          - '--blueprint @embroider/app-blueprint --pnpm --typescript' 
          - '--blueprint @embroider/app-blueprint --npm' 
          - '--blueprint @embroider/app-blueprint --npm --typescript' 

    steps:
      - uses: actions/checkout@v4
      - uses: wyvox/action-setup-pnpm@v3
      - run: pnpm test:ember-cli ${{ matrix.args }}


  ##################
  #
  # Tests ember-cli
  #
  new_library:
    needs: [preflight] # not explicitly required, but if this fails, I don't want any of CI running
    name: 'üì¶ Library' # V2 Addon blueprint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        args: 
          - '--npm' 
          - '--pnpm' 
          - '--typescript --npm' 
          - '--typescript --pnpm' 

    steps:
      - uses: actions/checkout@v4
      - uses: wyvox/action-setup-pnpm@v3
      - run: pnpm test:library ${{ matrix.args }}

  ##################
  #
  # Tests ember-source
  #
  ecosystem:
    name: "üåê ${{ matrix.name }}"
    needs: [preflight, build_ember-source]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      fail-fast: false
      max-parallel: 50 # this is trying to avoid hitting API rate limits when too many tests are hitting the github API at once.
      matrix: ${{fromJson(needs.preflight.outputs.matrix)}}

    steps:
      - uses: actions/checkout@v4
      # Most projects use pnpm
      - uses: wyvox/action-setup-pnpm@v3
      # Used by ember-data
      - uses: oven-sh/setup-bun@v2

      - name: Download built ember-source 
        uses: actions/download-artifact@v4
        with:
          name: ember-source-main-tgz

      # All of this can be ran locally via
      # pnpm test:ecosystem --name=@ember/test-helpers (for example)
      - name: "Clone"
        run: pnpm ci:run ./src/ci/run/clone.ts --name=${{matrix.name}}  
      - name: "Setup / Build"
        run: pnpm ci:run ./src/ci/run/setup.ts --name=${{matrix.name}}  
      - name: "Install ember-source @ main"
        run: pnpm ci:run ./src/ci/run/use-ember-main.ts --name=${{matrix.name}}  
      - name: "Verify that ember-source @ main is resolved"
        run: pnpm ci:run ./src/ci/run/verify-ember-source-installed.ts --name=${{matrix.name}}  
      - name: "Test"
        run: pnpm ci:run ./src/ci/run/test.ts --name=${{matrix.name}}  




  # TODO: post to Discord?
  # output:
  #   needs: [new_library, new_app, ecosystem]
  #   if: always()
  #   name: 'Output'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: wyvox/action-setup-pnpm@v3
